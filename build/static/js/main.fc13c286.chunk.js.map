{"version":3,"sources":["StateProvider.js","Footer.js","SidebarOption.js","spotify.js","Sidebar.js","SearchBar.js","Header.js","SongRow.js","Body.js","Player.js","spotify-logo.png","Login.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Footer","spotify","item","token","playing","dispatch","useEffect","getMyCurrentPlaybackState","then","r","console","log","type","is_playing","handlePlayPause","pause","play","className","src","album","images","url","alt","name","artists","map","artist","join","onClick","skipToNext","getMyCurrentPlayingTrack","fontSize","skipToPrevious","Grid","container","spacing","xs","Slider","aria-labelledby","SidebarOption","option","Icon","accessUrl","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","HistoryIcon","items","playlist","SearchBar","query","setQuery","resetQuery","maxLength","autoCorrect","autoCapitalize","spellCheck","autoFocus","placeholder","onChange","e","target","Header","user","Avatar","display_name","SongRow","track","playSong","id","Body","discover_weekly","uris","res","description","context_uri","tracks","Player","Login","Logo","href","s","SpotifyWebApi","App","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getPlaylist","response","getMyRecentlyPlayedTracks","recently_played_tracks","getMyTopArtists","top_artists","getMe","getUserPlaylists","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fc13c286.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport \"./Footer.css\";\r\nimport { Grid, Slider } from \"@material-ui/core\";\r\n\r\nfunction Footer({ spotify }) {\r\n  const [{ token, item, playing }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    spotify.getMyCurrentPlaybackState().then((r) => {\r\n      console.log(r);\r\n\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: r.is_playing,\r\n      });\r\n\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: r.item,\r\n      });\r\n    });\r\n  }, [spotify]);\r\n\r\n  const handlePlayPause = () => {\r\n    if (playing) {\r\n      spotify.pause();\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: false,\r\n      });\r\n    } else {\r\n      spotify.play();\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const skipNext = () => {\r\n    spotify.skipToNext();\r\n    spotify.getMyCurrentPlayingTrack().then((r) => {\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: r.item,\r\n      });\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  const skipPrevious = () => {\r\n    spotify.skipToPrevious();\r\n    spotify.getMyCurrentPlayingTrack().then((r) => {\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: r.item,\r\n      });\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer__left\">\r\n        <img\r\n          className=\"footer__albumLogo\"\r\n          src={item?.album.images[0].url}\r\n          alt={item?.name}\r\n        />\r\n        {item ? (\r\n          <div className=\"footer__songInfo\">\r\n            <h4>{item.name}</h4>\r\n            <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <p>No song is playing...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"footer__center\">\r\n        <ShuffleIcon className=\"footer__green\" />\r\n        <SkipPreviousIcon onClick={skipNext} className=\"footer__icon\" />\r\n        {playing ? (\r\n          <PauseCircleOutlineIcon\r\n            onClick={handlePlayPause}\r\n            fontSize=\"large\"\r\n            className=\"footer__icon\"\r\n          />\r\n        ) : (\r\n          <PlayCircleOutlineIcon\r\n            onClick={handlePlayPause}\r\n            fontSize=\"large\"\r\n            className=\"footer__icon\"\r\n          />\r\n        )}\r\n        <SkipNextIcon onClick={skipPrevious} className=\"footer__icon\" />\r\n        <RepeatIcon className=\"footer__green\" />\r\n      </div>\r\n      <div className=\"footer__right\">\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <PlaylistPlayIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <VolumeDownIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider aria-labelledby=\"continuous-slider\" />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ option = \"test\", Icon }) {\r\n  return (\r\n    <div className=\"sidebarOption\">\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? <h4>{option}</h4> : <p>{option}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;","// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n// Replace with your app's client ID, redirect URI and desired scopes\r\nconst clientId = \"165524098f9e4782b9cb27bb77a3fa9f\";\r\nconst redirectUri = \"http://localhost:3000/\";\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromResponse = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce((initial, item) => {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n      return initial;\r\n    }, {});\r\n};\r\n\r\nexport const accessUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport { getTokenFromResponse } from \"./spotify\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport HistoryIcon from '@material-ui/icons/History';\r\n\r\nfunction Sidebar() {\r\n  const [{ playlists }, dispatch] = useStateValue();\r\n  console.log(playlists);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        className=\"sidebar__logo\"\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <SidebarOption Icon={HomeIcon} option=\"Home\" />\r\n      <SidebarOption Icon={SearchIcon} option=\"Search\" />\r\n      <SidebarOption Icon={LibraryMusicIcon} option=\"Your Library\" />\r\n      <SidebarOption Icon={HistoryIcon} option=\"History\" />\r\n      <br />\r\n      <strong className=\"sidebar__title\">PLAYLISTS</strong>\r\n      <hr />\r\n      {playlists?.items?.map((playlist) => (\r\n        <SidebarOption option={playlist.name} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import React, {useEffect} from 'react'\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport \"./SearchBar.css\"\r\nexport default function SearchBar({query, setQuery, resetQuery}) {\r\n    useEffect(() => {\r\n        return () => resetQuery()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"SearchContainer\">\r\n            <div className='SearchBar'>\r\n                <SearchIcon /> \r\n                <input className= 'SearchInput no-outline' \r\n                        maxLength='80' \r\n                        autoCorrect='off' \r\n                        autoCapitalize='off' \r\n                        spellCheck='false'\r\n                        autoFocus={true}\r\n                        placeholder='Search for Artists, Songs, or Podcasts'\r\n                        value={query}\r\n                        onChange={e => setQuery(e.target.value)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { useEffect } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nfunction Header({ spotify }) {\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <SearchBar/>\r\n      </div>\r\n      <div className=\"header__right\">\r\n        <Avatar alt={user?.display_name} src={user?.images[0].url} />\r\n        <h4>{user?.display_name}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./SongRow.css\";\r\n\r\nfunction SongRow({ track, playSong }) {\r\n  console.log(track);\r\n  return (\r\n    <div className=\"songRow\" onClick={() => playSong(track.id)}>\r\n      <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\" />\r\n      <div className=\"songRow__info\">\r\n        <h4>{track.name}</h4>\r\n        <p>\r\n          {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\r\n          {track.album.name}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongRow;","import React from \"react\";\r\nimport \"./Body.css\";\r\nimport Header from \"./Header\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport SongRow from \"./SongRow\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nfunction Body({ spotify }) {\r\n  const [{ playlists }] = useStateValue();\r\n  console.log(playlists);\r\n\r\n  const [{ discover_weekly }, dispatch] = useStateValue();\r\n\r\n  const playPlaylist = (id) => {\r\n    spotify\r\n      .play({\r\n        context_uri: `spotify:playlist:3LCAkst5u7u7NxLJvjlT2O`,\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  const playSong = (id) => {\r\n    spotify\r\n      .play({\r\n        uris: [`spotify:track:${id}`],\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <Header spotify={spotify} />\r\n\r\n      <div className=\"body__info\">\r\n        <img src={discover_weekly?.images[0].url} alt=\"\" />\r\n        <div className=\"body__infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>{playlists?.items?.map((playlist) => (\r\n          <SidebarOption option={playlist.name}/>\r\n          ))}</h2>\r\n          <p>{discover_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"body__songs\">\r\n        <div className=\"body__icons\">\r\n          <PlayCircleFilledIcon\r\n            className=\"body__shuffle\"\r\n            onClick={playPlaylist}\r\n          />\r\n          <FavoriteIcon fontSize=\"large\" />\r\n          <MoreHorizIcon />\r\n        </div>\r\n\r\n        {discover_weekly?.tracks.items.map((item) => (\r\n          <SongRow playSong={playSong} track={item.track} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;","import React from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport \"./Player.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Body from \"./Body\";\r\n\r\nfunction Player({ spotify }) {\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player__body\">\r\n        <Sidebar />\r\n        <Body spotify={spotify} />\r\n      </div>\r\n      <Footer spotify={spotify} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;","export default __webpack_public_path__ + \"static/media/spotify-logo.77b9fd8b.png\";","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport Logo from \"./spotify-logo.png\";\r\nimport { accessUrl } from \"./spotify\";\r\n\r\nfunction Login() {\r\n  return (\r\n    <div className=\"login\">\r\n      <img\r\n        src={Logo} alt=\"\"\r\n      />\r\n      <a href={accessUrl}>LOGIN WITH SPOTIFY</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import React, { useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useStateValue } from \"./StateProvider\";\nimport Player from \"./Player\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport \"./App.css\";\nimport Login from \"./Login\";\n\nconst s = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // Set token\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      s.setAccessToken(_token);\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      s.getPlaylist(\"3LCAkst5u7u7NxLJvjlT2O\").then((response) =>\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      );\n\n      s.getMyRecentlyPlayedTracks().then((response) =>\n        dispatch({\n          type: \"SET_RECENTLY_PLAYED_TRACKS\",\n          recently_played_tracks: response,\n        })\n      );\n\n      s.getMyTopArtists().then((response) =>\n        dispatch({\n          type: \"SET_TOP_ARTISTS\",\n          top_artists: response,\n        })\n      );\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: s,\n      });\n\n      s.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n\n      s.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists,\n        });\n      });\n    }\n  }, [token, dispatch]);\n\n  return (\n    <div className=\"app\">\n      {!token && <Login />}\n      {token && <Player spotify={s} />}\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import { findAllByDisplayValue } from \"@testing-library/react\";\r\n\r\nexport const initialState = {\r\n  user: null,\r\n  playlists: [],\r\n  spotify: null,\r\n  discover_weekly: null,\r\n  top_artists: null,\r\n  playing: false,\r\n  recently_played_tracks: null,\r\n  item: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n\r\n    case \"SET_PLAYING\":\r\n      return {\r\n        ...state,\r\n        playing: action.playing,\r\n      };\r\n\r\n    case \"SET_ITEM\":\r\n      return {\r\n        ...state,\r\n        item: action.item,\r\n      };\r\n\r\n    case \"SET_DISCOVER_WEEKLY\":\r\n      return {\r\n        ...state,\r\n        discover_weekly: action.discover_weekly,\r\n      };\r\n\r\n    case \"SET_TOP_ARTISTS\":\r\n      return {\r\n        ...state,\r\n        top_artists: action.top_artists,\r\n      };\r\n\r\n    case \"SET_TOKEN\":\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n\r\n    case \"SET_SPOTIFY\":\r\n      return {\r\n        ...state,\r\n        spotify: action.spotify,\r\n      };\r\n\r\n    case \"SET_PLAYLISTS\":\r\n      return {\r\n        ...state,\r\n        playlists: action.playlists,\r\n      };\r\n    case \"SET_RECENTLY_PLAYED_TRACKS\":\r\n      return {\r\n        ...state,\r\n        recently_played_tracks: action.recently_played_tracks,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}